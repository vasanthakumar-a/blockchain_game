{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\Blockchain Games\\\\DappGame\\\\blockchain_game\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport MemoryToken from '../abis/MemoryToken.json';\nimport brain from '../brain.png';\nvar CARD_ARRAY = [{\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}, {\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                this.setState({\n                  cardArray: CARD_ARRAY.sort(function () {\n                    return 0.5 - Math.random();\n                  })\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, networkData, abi, address, token, totalSupply, balanceOf, i, id, tokenURI;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                }); //Load Smart Contract\n\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                networkData = MemoryToken.networks[networkId];\n\n                if (!networkData) {\n                  _context2.next = 35;\n                  break;\n                }\n\n                abi = MemoryToken.abi;\n                address = networkData.address;\n                token = new web3.eth.Contract(abi, address);\n                this.setState({\n                  token: token\n                });\n                _context2.next = 16;\n                return token.methods.totalSupply().call();\n\n              case 16:\n                totalSupply = _context2.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                }); //Load Token\n\n                _context2.next = 20;\n                return token.methods.balanceOf(accounts[0]).call();\n\n              case 20:\n                balanceOf = _context2.sent;\n                i = 0;\n\n              case 22:\n                if (!(i < balanceOf)) {\n                  _context2.next = 33;\n                  break;\n                }\n\n                _context2.next = 25;\n                return token.methods.tokenOfOwnerByIndex(accounts[0], i).call();\n\n              case 25:\n                id = _context2.sent;\n                _context2.next = 28;\n                return token.methods.tokenURI(id).call();\n\n              case 28:\n                tokenURI = _context2.sent;\n                this.setState({\n                  tokenURIs: [].concat(_toConsumableArray(this.state.tokenURIs), [tokenURI])\n                });\n\n              case 30:\n                i++;\n                _context2.next = 22;\n                break;\n\n              case 33:\n                _context2.next = 36;\n                break;\n\n              case 35:\n                window.alert('Smart Contract not deployed to network.');\n\n              case 36:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.chooseImage = function (cardId) {\n      cardId = cardId.toString();\n\n      if (_this.state.cardsWon.includes(cardId)) {\n        return window.location.origin + '/images/white.png';\n      } else if (_this.state.cardsChosenId.includes(cardId)) {\n        return CARD_ARRAY[cardId].img;\n      } else {\n        return window.location.origin + '/images/blank.png';\n      }\n    };\n\n    _this.flipCard = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cardId) {\n        var alreadyChosen;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                alreadyChosen = _this.state.cardsChosen.length;\n\n                _this.setState({\n                  cardsChosen: [].concat(_toConsumableArray(_this.state.cardsChosen), _toConsumableArray(_this.state.cardArray[cardId].name)),\n                  cardsChosenId: [].concat(_toConsumableArray(_this.state.cardsChosenId), [cardId])\n                });\n\n                if (alreadyChosen === 1) {\n                  setTimeout(_this.checkForMatch, 100);\n                  console.log(\"Clicked\");\n                }\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.checkForMatch = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var optionOneId, optionTwoId;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              optionOneId = _this.state.cardsChosenId[0];\n              optionTwoId = _this.state.cardsChosenId[1];\n\n              if (optionOneId == optionTwoId) {\n                alert('you have clicked the same image!');\n              } else if (_this.state.cardsChosen[0] === _this.state.cardsChosenId[1]) {\n                alert('You have found Match');\n\n                _this.setState({\n                  cardsWon: [].concat(_toConsumableArray(_this.state.cardsWon), [optionOneId, optionTwoId]) // tokenURIs: [...this.state.tokenURIs, CARD_ARRAY[optionOneId].img]\n\n                });\n              } else {\n                alert('Sorry try again');\n              }\n\n              _this.setState({\n                cardsChosen: [],\n                cardsChosenId: []\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.state = {\n      account: '0x0',\n      token: null,\n      totalSupply: 0,\n      tokenURIs: [],\n      cardArray: [],\n      cardsChosen: [],\n      cardsChosenId: [],\n      cardsWon: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: brain,\n        width: \"30\",\n        height: \"30\",\n        className: \"d-inline-block align-top\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }), \"\\xA0 Memory Tokens\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 45\n        }\n      }, this.state.account))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"d-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, \"Edit this file in App.js!\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grid mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, this.state.cardArray.map(function (card, key) {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          key: key,\n          src: _this2.chooseImage(key),\n          \"data-id\": key,\n          onClick: function onClick(event) {\n            var cardId = event.target.getAttribute('data-id');\n\n            if (!_this2.state.cardsWon.includes(cardId.toString())) {\n              _this2.flipCard(cardId);\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 23\n          }\n        });\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"grid mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:/Projects/Blockchain Games/DappGame/blockchain_game/src/components/App.js"],"names":["React","Component","Web3","MemoryToken","brain","CARD_ARRAY","name","img","App","loadWeb3","loadBlockchainData","setState","cardArray","sort","Math","random","web3","window","eth","getAccounts","accounts","account","net","getId","networkId","networkData","networks","abi","address","token","Contract","methods","totalSupply","call","balanceOf","i","tokenOfOwnerByIndex","id","tokenURI","tokenURIs","state","alert","ethereum","enable","currentProvider","props","chooseImage","cardId","toString","cardsWon","includes","location","origin","cardsChosenId","flipCard","alreadyChosen","cardsChosen","length","setTimeout","checkForMatch","console","log","optionOneId","optionTwoId","map","card","key","event","target","getAttribute"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport './App.css';\r\nimport MemoryToken from '../abis/MemoryToken.json'\r\nimport brain from '../brain.png'\r\n\r\nconst CARD_ARRAY = [\r\n  {\r\n    name: 'fries',\r\n    img: '/images/fries.png'\r\n  },\r\n  {\r\n    name: 'cheeseburger',\r\n    img: '/images/cheeseburger.png'\r\n  },\r\n  {\r\n    name: 'ice-cream',\r\n    img: '/images/ice-cream.png'\r\n  },\r\n  {\r\n    name: 'pizza',\r\n    img: '/images/pizza.png'\r\n  },\r\n  {\r\n    name: 'milkshake',\r\n    img: '/images/milkshake.png'\r\n  },\r\n  {\r\n    name: 'hotdog',\r\n    img: '/images/hotdog.png'\r\n  },\r\n  {\r\n    name: 'fries',\r\n    img: '/images/fries.png'\r\n  },\r\n  {\r\n    name: 'cheeseburger',\r\n    img: '/images/cheeseburger.png'\r\n  },\r\n  {\r\n    name: 'ice-cream',\r\n    img: '/images/ice-cream.png'\r\n  },\r\n  {\r\n    name: 'pizza',\r\n    img: '/images/pizza.png'\r\n  },\r\n  {\r\n    name: 'milkshake',\r\n    img: '/images/milkshake.png'\r\n  },\r\n  {\r\n    name: 'hotdog',\r\n    img: '/images/hotdog.png'\r\n  }\r\n]\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n    this.setState({ cardArray: CARD_ARRAY.sort(() => 0.5 - Math.random()) })\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({account: accounts[0]})\r\n    \r\n    //Load Smart Contract\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = MemoryToken.networks[networkId]\r\n    if (networkData) {\r\n      const abi = MemoryToken.abi\r\n      const address = networkData.address\r\n      const token = new web3.eth.Contract(abi, address)\r\n      this.setState({ token: token })\r\n      const totalSupply = await token.methods.totalSupply().call()\r\n      this.setState({totalSupply})\r\n      //Load Token\r\n      let balanceOf = await token.methods.balanceOf(accounts[0]).call()\r\n      for (let i=0;i<balanceOf; i++) {\r\n        let id = await token.methods.tokenOfOwnerByIndex(accounts[0], i).call()\r\n        let tokenURI = await token.methods.tokenURI(id).call()\r\n        this.setState({\r\n          tokenURIs: [...this.state.tokenURIs, tokenURI]\r\n        })\r\n      }\r\n    } else {\r\n      window.alert('Smart Contract not deployed to network.')\r\n    }\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  chooseImage = (cardId) => {\r\n    cardId = cardId.toString()\r\n    if(this.state.cardsWon.includes(cardId)) {\r\n      return window.location.origin + '/images/white.png'\r\n    }\r\n    else if(this.state.cardsChosenId.includes(cardId)) {\r\n      return CARD_ARRAY[cardId].img\r\n    } else {\r\n      return window.location.origin + '/images/blank.png'\r\n    }\r\n  }\r\n\r\n  flipCard = async(cardId) => {\r\n    let alreadyChosen = this.state.cardsChosen.length\r\n\r\n    this.setState({\r\n      cardsChosen: [...this.state.cardsChosen, ...this.state.cardArray[cardId].name],\r\n      cardsChosenId: [...this.state.cardsChosenId, cardId]\r\n    })\r\n\r\n    if (alreadyChosen === 1) {\r\n      setTimeout(this.checkForMatch, 100)\r\n      console.log(\"Clicked\")\r\n    }\r\n  }\r\n\r\n  checkForMatch = async() => {\r\n    const optionOneId = this.state.cardsChosenId[0] \r\n    const optionTwoId = this.state.cardsChosenId[1] \r\n\r\n    if (optionOneId == optionTwoId) {\r\n      alert('you have clicked the same image!')\r\n    }\r\n    else if (this.state.cardsChosen[0] === this.state.cardsChosenId[1]) {\r\n      alert('You have found Match')\r\n      this.setState({\r\n        cardsWon: [...this.state.cardsWon, optionOneId, optionTwoId],\r\n        // tokenURIs: [...this.state.tokenURIs, CARD_ARRAY[optionOneId].img]\r\n      })\r\n    } else {\r\n      alert('Sorry try again')\r\n    }\r\n    this.setState({\r\n      cardsChosen: [],\r\n      cardsChosenId: []\r\n    })\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '0x0',\r\n      token: null,\r\n      totalSupply: 0,\r\n      tokenURIs: [],\r\n      cardArray: [],\r\n      cardsChosen: [],\r\n      cardsChosenId: [],\r\n      cardsWon: []\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n          <a\r\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n            href=\"http://www.dappuniversity.com/bootcamp\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n          <img src={brain} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n          &nbsp; Memory Tokens\r\n          </a>\r\n          <ul className=\"navbar-nav px-3\">\r\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n              <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <h1 className=\"d-4\">Edit this file in App.js!</h1>\r\n\r\n                <div className=\"grid mb-4\" >\r\n\r\n                { this.state.cardArray.map((card, key) => {\r\n                    return(\r\n                      <img\r\n                        key={key}\r\n                        src={this.chooseImage(key)}\r\n                        data-id={key}\r\n                        onClick={(event) => {\r\n                          let cardId = event.target.getAttribute('data-id')\r\n                          if(!this.state.cardsWon.includes(cardId.toString())) {\r\n                            this.flipCard(cardId)\r\n                          }\r\n                        }}\r\n                      />\r\n                    )\r\n                  })}\r\n                </div>\r\n                <div>\r\n\r\n                  <div className=\"grid mb-4\" >\r\n\r\n                    {/* Code goes here... */}\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}